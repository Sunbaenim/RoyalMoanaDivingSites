// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoyalMoanaDivingSites.DAL;

#nullable disable

namespace RoyalMoanaDivingSites.DAL.Migrations
{
    [DbContext(typeof(RmdsDbContext))]
    [Migration("20220717115553_initDivingSitesWithArmsAndImages")]
    partial class initDivingSitesWithArmsAndImages
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RoyalMoanaDivingSites.DAL.Entities.Arm", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DivingSiteId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("DivingSiteId");

                    b.ToTable("Arms");
                });

            modelBuilder.Entity("RoyalMoanaDivingSites.DAL.Entities.DivingSite", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Current")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<short>("Depth")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsForDisabledPerson")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsInitiation")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSnorkeling")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsSpecialDiving")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(17,15)");

                    b.Property<string>("LaunchingDifficulty")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LaunchingDistance")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(17,15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Tide")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("WindDirection")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.HasKey("ID");

                    b.ToTable("DivingSites");
                });

            modelBuilder.Entity("RoyalMoanaDivingSites.DAL.Entities.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DivingSiteId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsMainImage")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ID");

                    b.HasIndex("DivingSiteId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("RoyalMoanaDivingSites.DAL.Entities.Arm", b =>
                {
                    b.HasOne("RoyalMoanaDivingSites.DAL.Entities.DivingSite", "DivingSite")
                        .WithMany("Arms")
                        .HasForeignKey("DivingSiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DivingSite");
                });

            modelBuilder.Entity("RoyalMoanaDivingSites.DAL.Entities.Image", b =>
                {
                    b.HasOne("RoyalMoanaDivingSites.DAL.Entities.DivingSite", "DivingSite")
                        .WithMany("Images")
                        .HasForeignKey("DivingSiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DivingSite");
                });

            modelBuilder.Entity("RoyalMoanaDivingSites.DAL.Entities.DivingSite", b =>
                {
                    b.Navigation("Arms");

                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
